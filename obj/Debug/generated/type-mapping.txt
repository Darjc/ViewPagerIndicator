com/rd/animation/AnimationManager = Com.RD.Animation.AnimationManager
  <init>(Lcom/rd/draw/data/Indicator;Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Draw.Data.Indicator, Com.RD.Animation.Controller.ValueController.IUpdateListener)
  basic()V = Basic()
  end()V = End()
  interactive(F)V = Interactive(float)
com/rd/animation/controller/AnimationController = Com.RD.Animation.Controller.AnimationController
  <init>(Lcom/rd/draw/data/Indicator;Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Draw.Data.Indicator, Com.RD.Animation.Controller.ValueController.IUpdateListener)
  basic()V = Basic()
  end()V = End()
  interactive(F)V = Interactive(float)
com/rd/animation/controller/ValueController = Com.RD.Animation.Controller.ValueController
  <init>(Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Animation.Controller.ValueController.IUpdateListener)
  color()Lcom/rd/animation/type/ColorAnimation; = Color()
  drop()Lcom/rd/animation/type/DropAnimation; = Drop()
  fill()Lcom/rd/animation/type/FillAnimation; = Fill()
  scale()Lcom/rd/animation/type/ScaleAnimation; = Scale()
  scaleDown()Lcom/rd/animation/type/ScaleDownAnimation; = ScaleDown()
  slide()Lcom/rd/animation/type/SlideAnimation; = Slide()
  swap()Lcom/rd/animation/type/SwapAnimation; = Swap()
  thinWorm()Lcom/rd/animation/type/ThinWormAnimation; = ThinWorm()
  worm()Lcom/rd/animation/type/WormAnimation; = Worm()
com/rd/animation/data/AnimationValue = Com.RD.Animation.Data.AnimationValue
  <init>()V = .ctor()
  getColorAnimationValue()Lcom/rd/animation/data/type/ColorAnimationValue; = ColorAnimationValue
  getDropAnimationValue()Lcom/rd/animation/data/type/DropAnimationValue; = DropAnimationValue
  getFillAnimationValue()Lcom/rd/animation/data/type/FillAnimationValue; = FillAnimationValue
  getScaleAnimationValue()Lcom/rd/animation/data/type/ScaleAnimationValue; = ScaleAnimationValue
  getSwapAnimationValue()Lcom/rd/animation/data/type/SwapAnimationValue; = SwapAnimationValue
  getThinWormAnimationValue()Lcom/rd/animation/data/type/ThinWormAnimationValue; = ThinWormAnimationValue
  getWormAnimationValue()Lcom/rd/animation/data/type/WormAnimationValue; = WormAnimationValue
com/rd/animation/data/type/ColorAnimationValue = Com.RD.Animation.Data.Type.ColorAnimationValue
  <init>()V = .ctor()
  getColor()I = Color
  setColor(I)V = Color
  getColorReverse()I = ColorReverse
  setColorReverse(I)V = ColorReverse
com/rd/animation/data/type/DropAnimationValue = Com.RD.Animation.Data.Type.DropAnimationValue
  <init>()V = .ctor()
  getHeight()I = Height
  setHeight(I)V = Height
  getRadius()I = Radius
  setRadius(I)V = Radius
  getWidth()I = Width
  setWidth(I)V = Width
com/rd/animation/data/type/FillAnimationValue = Com.RD.Animation.Data.Type.FillAnimationValue
  <init>()V = .ctor()
  getRadius()I = Radius
  setRadius(I)V = Radius
  getRadiusReverse()I = RadiusReverse
  setRadiusReverse(I)V = RadiusReverse
  getStroke()I = Stroke
  setStroke(I)V = Stroke
  getStrokeReverse()I = StrokeReverse
  setStrokeReverse(I)V = StrokeReverse
com/rd/animation/data/type/ScaleAnimationValue = Com.RD.Animation.Data.Type.ScaleAnimationValue
  <init>()V = .ctor()
  getRadius()I = Radius
  setRadius(I)V = Radius
  getRadiusReverse()I = RadiusReverse
  setRadiusReverse(I)V = RadiusReverse
com/rd/animation/data/type/SlideAnimationValue = Com.RD.Animation.Data.Type.SlideAnimationValue
  <init>()V = .ctor()
  getCoordinate()I = Coordinate
  setCoordinate(I)V = Coordinate
com/rd/animation/data/type/SwapAnimationValue = Com.RD.Animation.Data.Type.SwapAnimationValue
  <init>()V = .ctor()
  getCoordinate()I = Coordinate
  setCoordinate(I)V = Coordinate
  getCoordinateReverse()I = CoordinateReverse
  setCoordinateReverse(I)V = CoordinateReverse
com/rd/animation/data/type/ThinWormAnimationValue = Com.RD.Animation.Data.Type.ThinWormAnimationValue
  <init>()V = .ctor()
  getHeight()I = Height
  setHeight(I)V = Height
com/rd/animation/data/type/WormAnimationValue = Com.RD.Animation.Data.Type.WormAnimationValue
  <init>()V = .ctor()
  getRectEnd()I = RectEnd
  setRectEnd(I)V = RectEnd
  getRectStart()I = RectStart
  setRectStart(I)V = RectStart
com/rd/animation/data/Value = Com.RD.Animation.Data.IValue
com/rd/animation/type/AnimationType = Com.RD.Animation.Type.AnimationType
  COLOR = Color
  DROP = Drop
  FILL = Fill
  NONE = None
  SCALE = Scale
  SCALE_DOWN = ScaleDown
  SLIDE = Slide
  SWAP = Swap
  THIN_WORM = ThinWorm
  WORM = Worm
  valueOf(Ljava/lang/String;)Lcom/rd/animation/type/AnimationType; = ValueOf(string)
  values()[Lcom/rd/animation/type/AnimationType; = Values()
com/rd/animation/type/BaseAnimation = Com.RD.Animation.Type.BaseAnimation
  <init>(Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Animation.Controller.ValueController.IUpdateListener)
  animationDuration = AnimationDuration
  animator = Animator
  DEFAULT_ANIMATION_TIME = DefaultAnimationTime
  listener = Listener
  createAnimator()Lcom/rd/animation/type/BaseAnimation; = CreateAnimator()
  duration(J)Lcom/rd/animation/type/BaseAnimation; = Duration(long)
  end()V = End()
  progress(F)Lcom/rd/animation/type/BaseAnimation; = Progress(float)
  start()V = Start()
com/rd/animation/type/ColorAnimation = Com.RD.Animation.Type.ColorAnimation
  <init>(Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Animation.Controller.ValueController.IUpdateListener)
  DEFAULT_SELECTED_COLOR = DefaultSelectedColor
  DEFAULT_UNSELECTED_COLOR = DefaultUnselectedColor
  createAnimator()Lcom/rd/animation/type/BaseAnimation; = CreateAnimator()
  progress(F)Lcom/rd/animation/type/BaseAnimation; = Progress(float)
  with(II)Lcom/rd/animation/type/ColorAnimation; = With(int, int)
com/rd/animation/type/DropAnimation = Com.RD.Animation.Type.DropAnimation
  <init>(Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Animation.Controller.ValueController.IUpdateListener)
  createAnimator()Lcom/rd/animation/type/BaseAnimation; = CreateAnimator()
  progress(F)Lcom/rd/animation/type/BaseAnimation; = Progress(float)
  with(IIIII)Lcom/rd/animation/type/DropAnimation; = With(int, int, int, int, int)
com/rd/animation/type/FillAnimation = Com.RD.Animation.Type.FillAnimation
  <init>(Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Animation.Controller.ValueController.IUpdateListener)
  DEFAULT_STROKE_DP = DefaultStrokeDp
  with(IIII)Lcom/rd/animation/type/FillAnimation; = With(int, int, int, int)
com/rd/animation/type/ScaleAnimation = Com.RD.Animation.Type.ScaleAnimation
  <init>(Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Animation.Controller.ValueController.IUpdateListener)
  DEFAULT_SCALE_FACTOR = DefaultScaleFactor
  MAX_SCALE_FACTOR = MaxScaleFactor
  MIN_SCALE_FACTOR = MinScaleFactor
  createScalePropertyHolder(Z)Landroid/animation/PropertyValuesHolder; = CreateScalePropertyHolder(bool)
  with(IIIF)Lcom/rd/animation/type/ScaleAnimation; = With(int, int, int, float)
com/rd/animation/type/ScaleDownAnimation = Com.RD.Animation.Type.ScaleDownAnimation
  <init>(Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Animation.Controller.ValueController.IUpdateListener)
com/rd/animation/type/SlideAnimation = Com.RD.Animation.Type.SlideAnimation
  <init>(Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Animation.Controller.ValueController.IUpdateListener)
  createAnimator()Lcom/rd/animation/type/BaseAnimation; = CreateAnimator()
  progress(F)Lcom/rd/animation/type/BaseAnimation; = Progress(float)
  with(II)Lcom/rd/animation/type/SlideAnimation; = With(int, int)
com/rd/animation/type/SwapAnimation = Com.RD.Animation.Type.SwapAnimation
  <init>(Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Animation.Controller.ValueController.IUpdateListener)
  createAnimator()Lcom/rd/animation/type/BaseAnimation; = CreateAnimator()
  progress(F)Lcom/rd/animation/type/BaseAnimation; = Progress(float)
  with(II)Lcom/rd/animation/type/SwapAnimation; = With(int, int)
com/rd/animation/type/ThinWormAnimation = Com.RD.Animation.Type.ThinWormAnimation
  <init>(Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Animation.Controller.ValueController.IUpdateListener)
com/rd/animation/type/WormAnimation = Com.RD.Animation.Type.WormAnimation
  <init>(Lcom/rd/animation/controller/ValueController$UpdateListener;)V = .ctor(Com.RD.Animation.Controller.ValueController.IUpdateListener)
  createAnimator()Lcom/rd/animation/type/BaseAnimation; = CreateAnimator()
  progress(F)Lcom/rd/animation/type/BaseAnimation; = Progress(float)
  with(IIIZ)Lcom/rd/animation/type/WormAnimation; = With(int, int, int, bool)
com/rd/draw/controller/AttributeController = Com.RD.Draw.Controller.AttributeController
  <init>(Lcom/rd/draw/data/Indicator;)V = .ctor(Com.RD.Draw.Data.Indicator)
  init(Landroid/content/Context;Landroid/util/AttributeSet;)V = Init(Android.Content.Context, Android.Util.IAttributeSet)
com/rd/draw/controller/DrawController = Com.RD.Draw.Controller.DrawController
  <init>(Lcom/rd/draw/data/Indicator;)V = .ctor(Com.RD.Draw.Data.Indicator)
  draw(Landroid/graphics/Canvas;)V = Draw(Android.Graphics.Canvas)
  setClickListener(Lcom/rd/draw/controller/DrawController$ClickListener;)V = SetClickListener(Com.RD.Draw.Controller.DrawController.IClickListener)
  touch(Landroid/view/MotionEvent;)V = Touch(Android.Views.MotionEvent)
  updateValue(Lcom/rd/animation/data/Value;)V = UpdateValue(Com.RD.Animation.Data.IValue)
com/rd/draw/controller/MeasureController = Com.RD.Draw.Controller.MeasureController
  <init>()V = .ctor()
  measureViewSize(Lcom/rd/draw/data/Indicator;II)Landroid/util/Pair; = MeasureViewSize(Com.RD.Draw.Data.Indicator, int, int)
com/rd/draw/data/Indicator = Com.RD.Draw.Data.Indicator
  <init>()V = .ctor()
  COUNT_NONE = CountNone
  DEFAULT_COUNT = DefaultCount
  DEFAULT_PADDING_DP = DefaultPaddingDp
  DEFAULT_RADIUS_DP = DefaultRadiusDp
  MIN_COUNT = MinCount
  getAnimationDuration()J = AnimationDuration
  setAnimationDuration(J)V = AnimationDuration
  getAnimationType()Lcom/rd/animation/type/AnimationType; = AnimationType
  setAnimationType(Lcom/rd/animation/type/AnimationType;)V = AnimationType
  isAutoVisibility()Z = AutoVisibility
  setAutoVisibility(Z)V = AutoVisibility
  getCount()I = Count
  setCount(I)V = Count
  isDynamicCount()Z = DynamicCount
  setDynamicCount(Z)V = DynamicCount
  getHeight()I = Height
  setHeight(I)V = Height
  isInteractiveAnimation()Z = InteractiveAnimation
  setInteractiveAnimation(Z)V = InteractiveAnimation
  getLastSelectedPosition()I = LastSelectedPosition
  setLastSelectedPosition(I)V = LastSelectedPosition
  getOrientation()Lcom/rd/draw/data/Orientation; = Orientation
  setOrientation(Lcom/rd/draw/data/Orientation;)V = Orientation
  getPadding()I = Padding
  setPadding(I)V = Padding
  getPaddingBottom()I = PaddingBottom
  setPaddingBottom(I)V = PaddingBottom
  getPaddingLeft()I = PaddingLeft
  setPaddingLeft(I)V = PaddingLeft
  getPaddingRight()I = PaddingRight
  setPaddingRight(I)V = PaddingRight
  getPaddingTop()I = PaddingTop
  setPaddingTop(I)V = PaddingTop
  getRadius()I = Radius
  setRadius(I)V = Radius
  getRtlMode()Lcom/rd/draw/data/RtlMode; = RtlMode
  setRtlMode(Lcom/rd/draw/data/RtlMode;)V = RtlMode
  getScaleFactor()F = ScaleFactor
  setScaleFactor(F)V = ScaleFactor
  getSelectedColor()I = SelectedColor
  setSelectedColor(I)V = SelectedColor
  getSelectedPosition()I = SelectedPosition
  setSelectedPosition(I)V = SelectedPosition
  getSelectingPosition()I = SelectingPosition
  setSelectingPosition(I)V = SelectingPosition
  getStroke()I = Stroke
  setStroke(I)V = Stroke
  getUnselectedColor()I = UnselectedColor
  setUnselectedColor(I)V = UnselectedColor
  getViewPagerId()I = ViewPagerId
  setViewPagerId(I)V = ViewPagerId
  getWidth()I = Width
  setWidth(I)V = Width
com/rd/draw/data/Orientation = Com.RD.Draw.Data.Orientation
  HORIZONTAL = Horizontal
  VERTICAL = Vertical
  valueOf(Ljava/lang/String;)Lcom/rd/draw/data/Orientation; = ValueOf(string)
  values()[Lcom/rd/draw/data/Orientation; = Values()
com/rd/draw/data/PositionSavedState = Com.RD.Draw.Data.PositionSavedState
  <init>(Landroid/os/Parcelable;)V = .ctor(Android.OS.IParcelable)
  CREATOR = Creator
  getLastSelectedPosition()I = LastSelectedPosition
  setLastSelectedPosition(I)V = LastSelectedPosition
  getSelectedPosition()I = SelectedPosition
  setSelectedPosition(I)V = SelectedPosition
  getSelectingPosition()I = SelectingPosition
  setSelectingPosition(I)V = SelectingPosition
com/rd/draw/data/RtlMode = Com.RD.Draw.Data.RtlMode
  Auto = Auto
  Off = Off
  On = On
  valueOf(Ljava/lang/String;)Lcom/rd/draw/data/RtlMode; = ValueOf(string)
  values()[Lcom/rd/draw/data/RtlMode; = Values()
com/rd/draw/drawer/Drawer = Com.RD.Draw.Drawer.Drawer
  <init>(Lcom/rd/draw/data/Indicator;)V = .ctor(Com.RD.Draw.Data.Indicator)
  drawBasic(Landroid/graphics/Canvas;Z)V = DrawBasic(Android.Graphics.Canvas, bool)
  drawColor(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;)V = DrawColor(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue)
  drawDrop(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;)V = DrawDrop(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue)
  drawFill(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;)V = DrawFill(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue)
  drawScale(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;)V = DrawScale(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue)
  drawScaleDown(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;)V = DrawScaleDown(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue)
  drawSlide(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;)V = DrawSlide(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue)
  drawSwap(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;)V = DrawSwap(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue)
  drawThinWorm(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;)V = DrawThinWorm(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue)
  drawWorm(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;)V = DrawWorm(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue)
  setup(III)V = Setup(int, int, int)
com/rd/draw/drawer/type/BasicDrawer = Com.RD.Draw.Drawer.Type.BasicDrawer
  <init>(Landroid/graphics/Paint;Lcom/rd/draw/data/Indicator;)V = .ctor(Android.Graphics.Paint, Com.RD.Draw.Data.Indicator)
  draw(Landroid/graphics/Canvas;IZII)V = Draw(Android.Graphics.Canvas, int, bool, int, int)
com/rd/draw/drawer/type/ColorDrawer = Com.RD.Draw.Drawer.Type.ColorDrawer
  <init>(Landroid/graphics/Paint;Lcom/rd/draw/data/Indicator;)V = .ctor(Android.Graphics.Paint, Com.RD.Draw.Data.Indicator)
  draw(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;III)V = Draw(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue, int, int, int)
com/rd/draw/drawer/type/DropDrawer = Com.RD.Draw.Drawer.Type.DropDrawer
  <init>(Landroid/graphics/Paint;Lcom/rd/draw/data/Indicator;)V = .ctor(Android.Graphics.Paint, Com.RD.Draw.Data.Indicator)
  draw(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;II)V = Draw(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue, int, int)
com/rd/draw/drawer/type/FillDrawer = Com.RD.Draw.Drawer.Type.FillDrawer
  <init>(Landroid/graphics/Paint;Lcom/rd/draw/data/Indicator;)V = .ctor(Android.Graphics.Paint, Com.RD.Draw.Data.Indicator)
  draw(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;III)V = Draw(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue, int, int, int)
com/rd/draw/drawer/type/ScaleDownDrawer = Com.RD.Draw.Drawer.Type.ScaleDownDrawer
  <init>(Landroid/graphics/Paint;Lcom/rd/draw/data/Indicator;)V = .ctor(Android.Graphics.Paint, Com.RD.Draw.Data.Indicator)
  draw(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;III)V = Draw(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue, int, int, int)
com/rd/draw/drawer/type/ScaleDrawer = Com.RD.Draw.Drawer.Type.ScaleDrawer
  <init>(Landroid/graphics/Paint;Lcom/rd/draw/data/Indicator;)V = .ctor(Android.Graphics.Paint, Com.RD.Draw.Data.Indicator)
  draw(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;III)V = Draw(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue, int, int, int)
com/rd/draw/drawer/type/SlideDrawer = Com.RD.Draw.Drawer.Type.SlideDrawer
  <init>(Landroid/graphics/Paint;Lcom/rd/draw/data/Indicator;)V = .ctor(Android.Graphics.Paint, Com.RD.Draw.Data.Indicator)
  draw(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;II)V = Draw(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue, int, int)
com/rd/draw/drawer/type/SwapDrawer = Com.RD.Draw.Drawer.Type.SwapDrawer
  <init>(Landroid/graphics/Paint;Lcom/rd/draw/data/Indicator;)V = .ctor(Android.Graphics.Paint, Com.RD.Draw.Data.Indicator)
  draw(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;III)V = Draw(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue, int, int, int)
com/rd/draw/drawer/type/ThinWormDrawer = Com.RD.Draw.Drawer.Type.ThinWormDrawer
  <init>(Landroid/graphics/Paint;Lcom/rd/draw/data/Indicator;)V = .ctor(Android.Graphics.Paint, Com.RD.Draw.Data.Indicator)
com/rd/draw/drawer/type/WormDrawer = Com.RD.Draw.Drawer.Type.WormDrawer
  <init>(Landroid/graphics/Paint;Lcom/rd/draw/data/Indicator;)V = .ctor(Android.Graphics.Paint, Com.RD.Draw.Data.Indicator)
  rect = Rect
  draw(Landroid/graphics/Canvas;Lcom/rd/animation/data/Value;II)V = Draw(Android.Graphics.Canvas, Com.RD.Animation.Data.IValue, int, int)
com/rd/draw/DrawManager = Com.RD.Draw.DrawManager
  <init>()V = .ctor()
  draw(Landroid/graphics/Canvas;)V = Draw(Android.Graphics.Canvas)
  indicator()Lcom/rd/draw/data/Indicator; = Indicator()
  initAttributes(Landroid/content/Context;Landroid/util/AttributeSet;)V = InitAttributes(Android.Content.Context, Android.Util.IAttributeSet)
  measureViewSize(II)Landroid/util/Pair; = MeasureViewSize(int, int)
  setClickListener(Lcom/rd/draw/controller/DrawController$ClickListener;)V = SetClickListener(Com.RD.Draw.Controller.DrawController.IClickListener)
  touch(Landroid/view/MotionEvent;)V = Touch(Android.Views.MotionEvent)
  updateValue(Lcom/rd/animation/data/Value;)V = UpdateValue(Com.RD.Animation.Data.IValue)
com/rd/IndicatorManager = Com.RD.IndicatorManager
  animate()Lcom/rd/animation/AnimationManager; = Animate()
  drawer()Lcom/rd/draw/DrawManager; = Drawer()
  indicator()Lcom/rd/draw/data/Indicator; = Indicator()
  onValueUpdated(Lcom/rd/animation/data/Value;)V = OnValueUpdated(Com.RD.Animation.Data.IValue)
com/rd/pageindicatorview/BuildConfig = Com.RD.Pageindicatorview.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/rd/PageIndicatorView = Com.RD.PageIndicatorView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;II)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int, int)
  getAnimationDuration()J = AnimationDuration
  setAnimationDuration(J)V = AnimationDuration
  getCount()I = Count
  setCount(I)V = Count
  getPadding()I = Padding
  setPadding(I)V = Padding
  getRadius()I = Radius
  setRadius(I)V = Radius
  getScaleFactor()F = ScaleFactor
  setScaleFactor(F)V = ScaleFactor
  getSelectedColor()I = SelectedColor
  setSelectedColor(I)V = SelectedColor
  getSelection()I = Selection
  setSelection(I)V = Selection
  getStrokeWidth()I = StrokeWidth
  setStrokeWidth(I)V = StrokeWidth
  getUnselectedColor()I = UnselectedColor
  setUnselectedColor(I)V = UnselectedColor
  clearSelection()V = ClearSelection()
  onAdapterChanged(Landroid/support/v4/view/ViewPager;Landroid/support/v4/view/PagerAdapter;Landroid/support/v4/view/PagerAdapter;)V = OnAdapterChanged(Android.Support.V4.View.ViewPager, Android.Support.V4.View.PagerAdapter, Android.Support.V4.View.PagerAdapter)
  onIndicatorUpdated()V = OnIndicatorUpdated()
  onPageScrolled(IFI)V = OnPageScrolled(int, float, int)
  onPageScrollStateChanged(I)V = OnPageScrollStateChanged(int)
  onPageSelected(I)V = OnPageSelected(int)
  onRestoreInstanceState(Landroid/os/Parcelable;)V = OnRestoreInstanceState(Android.OS.IParcelable)
  onSaveInstanceState()Landroid/os/Parcelable; = OnSaveInstanceState()
  releaseViewPager()V = ReleaseViewPager()
  setAnimationType(Lcom/rd/animation/type/AnimationType;)V = SetAnimationType(Com.RD.Animation.Type.AnimationType)
  setAutoVisibility(Z)V = SetAutoVisibility(bool)
  setClickListener(Lcom/rd/draw/controller/DrawController$ClickListener;)V = SetClickListener(Com.RD.Draw.Controller.DrawController.IClickListener)
  setDynamicCount(Z)V = SetDynamicCount(bool)
  setInteractiveAnimation(Z)V = SetInteractiveAnimation(bool)
  setOrientation(Lcom/rd/draw/data/Orientation;)V = SetOrientation(Com.RD.Draw.Data.Orientation)
  setPadding(F)V = SetPadding(float)
  setProgress(IF)V = SetProgress(int, float)
  setRadius(F)V = SetRadius(float)
  setRtlMode(Lcom/rd/draw/data/RtlMode;)V = SetRtlMode(Com.RD.Draw.Data.RtlMode)
  setSelected(I)V = SetSelected(int)
  setStrokeWidth(F)V = SetStrokeWidth(float)
  setViewPager(Landroid/support/v4/view/ViewPager;)V = SetViewPager(Android.Support.V4.View.ViewPager)
com/rd/utils/CoordinatesUtils = Com.RD.Utils.CoordinatesUtils
  <init>()V = .ctor()
  getCoordinate(Lcom/rd/draw/data/Indicator;I)I = GetCoordinate(Com.RD.Draw.Data.Indicator, int)
  getPosition(Lcom/rd/draw/data/Indicator;FF)I = GetPosition(Com.RD.Draw.Data.Indicator, float, float)
  getProgress(Lcom/rd/draw/data/Indicator;IFZ)Landroid/util/Pair; = GetProgress(Com.RD.Draw.Data.Indicator, int, float, bool)
  getXCoordinate(Lcom/rd/draw/data/Indicator;I)I = GetXCoordinate(Com.RD.Draw.Data.Indicator, int)
  getYCoordinate(Lcom/rd/draw/data/Indicator;I)I = GetYCoordinate(Com.RD.Draw.Data.Indicator, int)
com/rd/utils/DensityUtils = Com.RD.Utils.DensityUtils
  <init>()V = .ctor()
  dpToPx(I)I = DpToPx(int)
  pxToDp(F)I = PxToDp(float)
com/rd/utils/IdUtils = Com.RD.Utils.IdUtils
  <init>()V = .ctor()
  generateViewId()I = GenerateViewId()
